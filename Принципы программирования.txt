====================================================================================

DRY – расшифровывается как Don’t Repeat Youself – не повторяйся, также известен как 
DIE – Duplication Is Evil – дублирование это зло. Этот принцип заключается в том, 
что нужно избегать повторений одного и того же кода. Лучше использовать универсальные 
свойства и функции.

====================================================================================

KISS – Keep It Simple, Stupid – не усложняй! Смысл этого принципа программирования 
заключается в том, что стоит делать максимально простую и понятную архитектуру, 
применять шаблоны проектирования и не изобретать велосипед.

====================================================================================

Термин YAGNI значит You Ain’t Gonna Need It – вам это не понадобится! Его суть в 
том, чтобы реализовать только поставленные задачи и отказаться от избыточного 
функционала.

====================================================================================

SOLID 
Прогу легко будет дополнять и легко читать и переиспользовать иcкать ошибки

SINGLE RESPONSIBILITY PRINCIPLE - принцип единственной обязанности
Класс должен иметь только одну причину изменения или 
на каждый класс должна быть возложена одна-единственная обязанность

OPEN-CLOSED PRINCIPLE - принцип открытости/закрытости
Разработанный код должен быть открыт для расщирения функционала
(через наследование)и закрыт к изменениям

LISKOV SUBSTITUTION PRINCIPLE - принцип подстановки Барбары Лисков
Если у нас есть код в который приходит базовый класс то в этот код должен 
приходить его наследник без каких либо проблем

INTERFACE SEGREGATION PRINCIPLE – принцип разделения интерфейса
Много интерфейсов предназначеныые для клиентов лучше чем один интерфейс
общего предназначения 

DEPENDENCY INVERSION PRINCIPLE – принцип инверсии зависимостей
Должны использовать все классы через интерфейсы
Абстрактность не должна зависеть на конкретное и конкретное должна 
зависеть на абстрактное
1.Модуди верхних уровней не должны зависить от модулей нижних уровней.
Оба типа модулей должны зависеть от абстраций
2.Абстракции не должны зависеть от детайлей. Детали должны зависеть от 
абстракций

====================================================================================